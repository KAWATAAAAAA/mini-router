/* @Version:pkg-version Build Date:2022-9-21 17:23:48 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});let e=null,t=null,n="",o="",l=!0,u=null;const a=[];exports.useMiniRouter=function(){const i=()=>{e=null,t=null,n="",o="",a.length=0,l=!0,u=null};return{has:e=>Object.prototype.hasOwnProperty.call(t,e),next:function(i){const{name:r,isCache:c=!0,params:s,callbackOfReturnThisPage:p=null}=i;!t||t[r]?e&&t&&(n=r,o=e.dialog.component.name,l&&a.push(o),l=!1,u=p,a.push(n),e.update({component:t[r].component,title:i.title||t[r].title,isCache:c,params:s,name:r})):console.warn("miniRouter",`路由映射表中并不存在 name 为${r}的组件，请检查组件 name 是否与路由表中一致`)},back:(l,i)=>{if(0===a.length)return void console.warn("miniRouter","路由历史记录为空，不能执行返回操作");if(!e||!t)return;o=a.pop(),n=a.slice(-1)[0];const r=(i||{}).title;e.update({component:t[n].component,title:r||t[n].title,name:n}),u&&(u(l),u=null)},find:e=>{if(t)return t[e]},registerReplacePoint:t=>{e=t},setComponentMap:e=>{i(),t=e},getRouterRecords:()=>a,updateRouteInfo:(e,n,o)=>{t&&t[e]&&(t[e][n]=o)}}};
