/* @Version:pkg-version Build Date:2022-9-21 17:23:48 */
let n=null,e=null,t="",o="",l=!0,a=null;const i=[];function u(){const u=()=>{n=null,e=null,t="",o="",i.length=0,l=!0,a=null};return{has:n=>Object.prototype.hasOwnProperty.call(e,n),next:function(u){const{name:c,isCache:r=!0,params:p,callbackOfReturnThisPage:s=null}=u;!e||e[c]?n&&e&&(t=c,o=n.dialog.component.name,l&&i.push(o),l=!1,a=s,i.push(t),n.update({component:e[c].component,title:u.title||e[c].title,isCache:r,params:p,name:c})):console.warn("miniRouter",`路由映射表中并不存在 name 为${c}的组件，请检查组件 name 是否与路由表中一致`)},back:(l,u)=>{if(0===i.length)return void console.warn("miniRouter","路由历史记录为空，不能执行返回操作");if(!n||!e)return;o=i.pop(),t=i.slice(-1)[0];const c=(u||{}).title;n.update({component:e[t].component,title:c||e[t].title,name:t}),a&&(a(l),a=null)},find:n=>{if(e)return e[n]},registerReplacePoint:e=>{n=e},setComponentMap:n=>{u(),e=n},getRouterRecords:()=>i,updateRouteInfo:(n,t,o)=>{e&&e[n]&&(e[n][t]=o)}}}export{u as useMiniRouter};
